Joshua Fredrickson
IGME 236 Prototype Documentation

Application chosen to redesign: RIT’s desktop web client for Zoom (https://rit.zoom.us)
Prototype URL:   https://2czlco.axshare.com
Design:
	My redesign was mostly based on two concerns I had. The landing screen had some issues with its style choices and UI. The backing image caused some of the buttons and accompanying text to blend into it. This made it somewhat hard to read and was not eye grabbing despite being the main focus of the page. It also had an issue in what content it displayed to a user. It gives the user the option to join if given a meeting ID, host a new session now, and sign in. However, it doesn’t have access to your schedule or recordings and sign in only has accompanying text of configure your account, which doesn’t immediately sound like the place you’d find your recordings or meetings. 
	I also had issue with how what options the user was given in meetings. It only provides options for users to schedule new meetings that you host and has no way of viewing other people’s meetings so users have to go out of their way to find the meeting ID every time they want to join a call. This is an issue especially for students since likely their Zoom sessions are attending classes and not necessarily hosting/scheduling many of their own calls, so the Meetings tab is missing a huge user feature.
	To implement these changes, I made a series of changes. To the landing screen, I resized the image and had a black bounding box for all of the buttons and text so they pop out more while still keeping with the RIT color scheme. I originally kept the Join and Host buttons as they were while adding a Meetings button to bring you to your meetings tab and changed Sign In’s text to suggest better what is found once logged in. I also changed the page that Join leads too, adding an option that links to your scheduled meetings so you can join one of those meetings. To the meetings tab, the major change I added was another button that shows a new page to add someone else’s meeting to your schedule from a meeting ID and if the meeting is recurring or not.

Testing:
	To test my design, I asked three of my friends run through the prototype I had made. Two of them are students using Zoom for school and the other recently graduated but is now using Zoom for work so I thought they’d be good testers. Because of the quarantine I didn’t have access to a paper prototype or simpler prototype, so instead I used a fairly high functioning prototype focusing only on the changes. The tasks I gave them, in a random order for each person, were:

•	Join a meeting from a scheduled meeting.
•	Join a meeting given the ID 123456789
•	Start a new meeting.
•	Schedule a new recurring meeting with “IGME 101” as the topic.
•	Add a meeting created by someone else into your schedule. 
•	Access your recorded meetings.

After each task they would reset to the landing screen. Once they completed their tasks and waited for a few minutes, all three of my testers then ran through the tests again in a different order to see if the design was easy to remember. 

Results of testing:
	Most of the tasks were completed without any issue but where two of my three testers had issues were with the landing screen and the task of scheduling a new meeting. They both, after a couple seconds of hesitation, chose the Host option which would just bring them to an end screen as it would instantly start a new Zoom meeting. After that, they both choose options that would send them to their meetings, but one went through Join because they saw that option when they saw an option to join from meetings when they had the task to join a meeting with an id. Once they went back, they both realized the Meetings tab, but I was surprised that they both went for Host. Their comments mid task suggested that the Host option made more sense and when I asked them some follow up questions afterwards, one said that it made sense that Host would be what he wanted, and the other had tried Sign In after Host saying that he thought Host and Sign In felt more like actions rather than just the word Meetings on the button, so he gravitated to them first. Another thing was that I had forgotten to add any kind of reaction to required fields, which came up once when one of my testers tried to join a session and forgot to put the ID into the field and clicked the button and was confused when nothing happened.
	If I learned anything it was that “I am not the user”. I know you have been saying that again and again and I thought I knew that, but seeing my testers not work in what I thought was obvious really hammered it home, making me have to think in more depth than I expected about things like button labels.

Changes:
	I made changes to the Join page as well as the scheduling new meetings/adding external meetings by adding Required Field text when trying to enter without filling those out. I also made a few changes to the Landing Page when it comes to what labels and accompanying text. I changed the labels to make them all feel more action oriented. I wanted to keep them short so as to be easily and quickly readable so that you can understand at a glance what they are, but I ended up having to abandon single word labels. Host became Start Session and Meetings became View Meetings. Their accompanying text also became “Host a new, unscheduled session” and “Access and create your scheduled meetings”.

Issues:
	Testing went more or less smoothly. We used Discord screen share to show me their screen and I gave them a link to a published version of my prototype, and while it would have been nice to record the share, I’ve actually had issues lately with recording Zoom calls, with the files having extremely choppy and distorted image quality during playback, so just doing a screen share with me taking notes worked well. Most of my issues came from implementation and primarily on the side of making interactions work that weren’t simple hover over, show/hide, and link to page events. I was able to work through some of the conditionals and creating local variables to pass data inside a page but I wasn’t sure how to send data across pages, if at all possible. This may be me just working more towards full functionality rather than a prototype, but I worked around this just by having some sample elements made and hide them until the action would show them instead of creating new elements on actions. I would also just use placeholder data when I was having issue making the events/variables work in order to simulate how it would look/work. 

Assessment of Axure:
	Overall, I liked using Axure and would like to dive deeper into its more complex topics in order to make more in depth prototypes. Much like Adobe products, I felt that much of what I was doing was easy but there were many features that I had no idea were there or how to use. There were times I was frustrated, especially in making conditionals and sometimes in setting other interactions. It seems like some options are missing from some events. For instance, I can’t find an easy way to change fill color of a widget inside a click event. However, I did enjoy working with it and despite my mild complaints, I really liked the amount you CAN do with the events. Next time I work on a prototype, I’m interested in doing more of a deep dive of the advanced features. I will say though, I understand why in class you suggested doing paper prototypes before doing a hi fi prototype with Axure, since making changes is annoying once you have widgets and events all set up. I would definitely have a better idea of what the final will look like before I open Axure.  

